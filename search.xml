<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>统计机器学习</title>
      <link href="/2022/12/09/tong-ji-ji-qi-xue-xi/"/>
      <url>/2022/12/09/tong-ji-ji-qi-xue-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="学习的类型"><a href="#学习的类型" class="headerlink" title="学习的类型"></a>学习的类型</h2><h3 id="1-监督学习（supervised-learning）"><a href="#1-监督学习（supervised-learning）" class="headerlink" title="1. 监督学习（supervised learning）"></a>1. 监督学习（supervised learning）</h3><p>监督学习可以被视为一种学生学习的过程，即向导师提问并回答。在机器学习情境中，学生对应于计算机，导师对应于计算机的用户;计算机从问与答的成对样本中学习一种从问题到其答案的映射。</p><p>监督学习的目标在于获得**泛化能力(generalization ability)**：一种能够为从未被学习过的问题猜出恰当答案的能力。</p><p>监督学习的典型任务：</p><ul><li><strong>回归(regression)，当答案是一个实数值(如:温度)</strong></li><li><strong>分类(classification)，如果答案是一个分类值(如:“是”或“否”)</strong></li><li><strong>排序(ranking)，如果答案是一个数列值(如:“好”“中”或“劣”)</strong></li></ul><h3 id="2-非监督学习（unsupervised-learning）"><a href="#2-非监督学习（unsupervised-learning）" class="headerlink" title="2. 非监督学习（unsupervised learning）"></a>2. 非监督学习（unsupervised learning）</h3><p>非监督学习被认为是，导师不存在并且学生自学。在机器学习情境中，计算机通过互联网自动地收集数据并且尝试在没有用户任何指导下抽取有用的知识。因此，非监督学习比监督学习更加自动化，尽管其目标不一定指定清楚。</p><p>非监督学习的典型任务：</p><ul><li><strong>聚类(data clustering)</strong></li><li><strong>异常点检测(outlier detection)</strong></li><li><strong>变化检测(change detection)</strong></li></ul><h3 id="3-强化学习（reinforcement-learning）"><a href="#3-强化学习（reinforcement-learning）" class="headerlink" title="3. 强化学习（reinforcement learning）"></a>3. 强化学习（reinforcement learning）</h3><p>强化学习与监督学习类似，也是以使计算机获得对没有学习过的问题做出正确解答的泛化能力为目标，但是在学习过程中，不设置导师提示对错、告知最终答案的环节。相反，导师评价(evaluate)学生的行为并给予其反馈。强化学习的目标是基于来自导师的反馈，使得学生提高其行为，从而最大化导师的评价。</p><h3 id="4-高级主题"><a href="#4-高级主题" class="headerlink" title="4. 高级主题"></a>4. 高级主题</h3><ul><li><strong>半监督学习(semi-supervised learning)</strong></li><li><strong>集成学习(ensemble learning)</strong></li><li><strong>矩阵学习(matrix learning)、张量学习(tensor learning)</strong></li><li><strong>在线学习(online learning)</strong></li><li><strong>迁移学习(transfer learning)</strong></li><li><strong>降维(dimensionality reduction)</strong></li></ul><h3 id="5-其他热点"><a href="#5-其他热点" class="headerlink" title="5. 其他热点"></a>5. 其他热点</h3><ul><li><strong>关联规则挖掘</strong></li><li><strong>概率图模型</strong></li><li><strong>深度学习</strong></li><li><strong>图、视频、文本、音频、网络的分析</strong></li><li><strong>分布式计算</strong></li></ul><h2 id="两种学习模型：判别式模型和生成式模型"><a href="#两种学习模型：判别式模型和生成式模型" class="headerlink" title="两种学习模型：判别式模型和生成式模型"></a>两种学习模型：判别式模型和生成式模型</h2><h3 id="监督学习：分类、回归、标记"><a href="#监督学习：分类、回归、标记" class="headerlink" title="监督学习：分类、回归、标记"></a>监督学习：分类、回归、标记</h3><ul><li>概率方式<ul><li>判别式模型：直接对 $p(y|x)$ 建模或者学习 $y=f(x)$<ul><li><strong>逻辑回归(Logistic Regression)</strong></li><li><strong>条件随机场(Conditional Random Field，CRF)</strong></li></ul></li><li>生成式模型：学习联合概率分布 $p(x,y)$<ul><li><strong>朴素贝叶斯(Naive Bayesian Algorithm)</strong></li></ul></li></ul></li><li>非概率方式<ul><li><strong>线性回归(Linear Regression)/岭回归/LASSO</strong></li><li><strong>样条回归(Spline Regression)</strong></li><li><strong>支持向量机(Support Vector Machine，SVM)：基于间隔</strong></li><li><strong>K近邻(K-Nearest Neighbor，KNN)：基于距离</strong></li><li><strong>决策树(Decision Tree)：基于树的节点</strong></li></ul></li></ul><h3 id="非监督学习：降维、聚类、特征学习、概率密度估计（生成数据）"><a href="#非监督学习：降维、聚类、特征学习、概率密度估计（生成数据）" class="headerlink" title="非监督学习：降维、聚类、特征学习、概率密度估计（生成数据）"></a>非监督学习：降维、聚类、特征学习、概率密度估计（生成数据）</h3><ul><li>概率方式<ul><li>生成模型：直接对 $p(x)$ 建模<ul><li><strong>高斯混合模型(Gaussian Mixture Model，GMM)</strong></li><li><strong>隐马尔可夫模型(Hidden Markov Model，HMM)</strong></li><li><strong>因子分析(Factor Analysis，FA)</strong></li><li><strong>概率主成分分析(Probabilistic Principal Component Analysis，P-PCA)</strong></li><li><strong>概率潜在语义分析(Probabilistic Latent Semantic Analysis，P-LSA)</strong></li><li><strong>潜在狄利克雷分布 (Latent Dirichlet Allocation，LDA)</strong></li></ul></li><li>深度生成模型：利用神经网络来建模 $p(x|z;\theta)$，并不对分布本身进行建模，而是建模生成过程<ul><li><strong>玻尔兹曼机(Boltzmann machine)/受限玻尔兹曼机(Restricted Boltzmann Machines，RBM)</strong></li><li><strong>深度信念网络(DeepBelief Network，DBN）</strong></li><li><strong>变分自编码器(Variational Auto-Encoders，VAE)</strong></li><li><strong>生成随机网络(Generative Stochastic Network，GSN)</strong></li><li><strong>生成对抗网络(Generative Adversarial Network，GAN)</strong></li></ul></li></ul></li><li>非概率方式<ul><li><strong>主成分分析(Principal Component Analysis，PCA)/核主成分分析(Kernel Principal Component Analysis，KPCA)</strong></li><li><strong>线性判别分析(Linear Discriminant Analysis，LDA)</strong></li><li><strong>多维尺度变换(Multi-dimensional Scaling，MDS)</strong></li><li><strong>局部线性嵌入(Locally Linear Embedding，LLE)</strong></li><li><strong>自编码器(Auto-Encoder)/降噪自编码器(Denoising Auto-Encoder，DAE)</strong></li><li><strong>K-均值(K-means)</strong></li><li><strong>层次聚类(Hierarchical clustering)</strong></li><li><strong>谱聚类(Spectral clustering)</strong></li><li><strong>潜在语义分析((Latent Semantic Analysis，LSA)</strong></li></ul></li></ul><h2 id="正则化（约束）方法"><a href="#正则化（约束）方法" class="headerlink" title="正则化（约束）方法"></a>正则化（约束）方法</h2><ul><li><strong>$l_1$约束</strong></li><li><strong>$l_2$约束</strong></li><li><strong>$l_1+l_2$约束</strong></li><li><strong>$l_{1,2}$约束</strong></li><li><strong>迹范数约束</strong></li></ul><h2 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h2><ul><li><p>回归</p><ul><li><strong>$l_2$损失(平方差损失)</strong></li><li><strong>$l_1$损失</strong></li><li><strong>Huber损失</strong></li><li><strong>Tukey损失</strong></li></ul></li><li><p>分类</p><ul><li><p><strong>0/1损失</strong></p></li><li><p><strong>指数损失</strong></p></li><li><p><strong>Hinge损失</strong></p></li><li><p><strong>Ramp损失</strong></p></li><li><p><strong>交叉熵损失函数</strong></p></li></ul></li></ul><h2 id="评价指标"><a href="#评价指标" class="headerlink" title="评价指标"></a>评价指标</h2><ul><li><p>回归</p><ul><li><p>均方误差(Mean Squared Error，MSE)</p></li><li><p>均方根误差(Root Mean Square Error，RMSE)</p></li><li><p>平方绝对误差(Mean Absolute Error，MAE)</p></li></ul></li><li><p>分类</p><ul><li><p>混淆矩阵(Confusion Matrix)</p><p>真正样本(True Positive,TP): 样本真实类别是正向的,模型预测的类别也是正向的<br>真负样本(True Negative,TN): 样本真实类别是负向的,模型预测的类别也是负向的<br>假正样本(False Positive,FP): 样本真实类别是负向的,模型预测的类别是正向的<br>假负样本(False Negative,FN): 样本真实类别是正向的,模型预测的类别是负向的</p><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202212092205760.png" style="zoom: 60%;"></li><li><p>正确率(accuracy)<br>$$<br>Accuracy=\frac{TP +TN}{TN+FN +FP +TP}<br>$$</p></li><li><p>精准率(Precision)<br>$$<br>Precision=\frac{TP}{TP+FP}<br>$$</p></li><li><p>召回率(Recall)<br>$$<br>Recall=\frac{TP}{TP+FN}<br>$$</p></li><li><p>特异度(Specificity)<br>$$<br>Specificity=\frac{TN}{TN+FP}<br>$$</p></li><li><p>F-值<br>$$<br>F_{\beta}-Measure=\frac{(1+\beta^2)×Precision×Recall}{\beta^2×Precision+Recall}<br>$$</p><p>当$\beta=1$时候，即精准度和召回率一样重要的时候，公式如下：</p><p>$$<br>F_1−Measure=\frac{2}{\frac{1}{Precision}+\frac{1}{Recall}}=\frac{2×Precision×Recall}{Precision+Recall}<br>$$</p></li><li><p>ROC</p></li></ul></li><li><p>聚类</p><ul><li>纯度(Purity)</li><li>Rand指数</li><li>互信息(Mutual Information)</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 统计机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 统计机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10+ubuntu双系统安装</title>
      <link href="/2022/10/05/win10-ubuntu-shuang-xi-tong-an-zhuang/"/>
      <url>/2022/10/05/win10-ubuntu-shuang-xi-tong-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="安装win10-ubuntu双系统"><a href="#安装win10-ubuntu双系统" class="headerlink" title="安装win10 + ubuntu双系统"></a>安装win10 + ubuntu双系统</h2><h3 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h3><ol><li>一个4G以上的空U盘</li><li>确定自己电脑的类型<br>A 类: MBR的bios + 单硬盘<br>B 类: MBR的bios + 双硬盘（SSD固态 + 机械硬盘）<br>C 类: UEFI的bios + 单硬盘<br>D 类: UEFI的bios + 双硬盘（SSD固态 + 机械硬盘）</li><li>安装<a href="http://rufus.ie/zh/">rufus</a>，下载 <a href="https://cn.ubuntu.com/download">ubuntu</a> 的镜像</li></ol><h3 id="第一步：准备U盘"><a href="#第一步：准备U盘" class="headerlink" title="第一步：准备U盘"></a>第一步：准备U盘</h3><p>U盘最好是一个空U盘， 因为<strong>在安装过程中U盘会被格式化</strong></p><h3 id="第二步：查看电脑的信息"><a href="#第二步：查看电脑的信息" class="headerlink" title="第二步：查看电脑的信息"></a>第二步：查看电脑的信息</h3><h4 id="1-查看BIOS模式"><a href="#1-查看BIOS模式" class="headerlink" title="1. 查看BIOS模式"></a>1. 查看BIOS模式</h4><p><strong>win+r</strong>快捷键进入运行，输入<strong>msinfo32</strong>回车，出现以下界面，可查看BIOS模式：</p><p><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202210051318732.png"></p><p>BIOS模式有传统的MBR模式和新式UEFI模式，这将对安装双系统的方法产生直接影响。目前来看，大部分电脑都属于新式UEFI模式，不过也存在一些老机子仍然属于传统MBR模式。如果你的电脑属于传统MBR模式，强烈建议你重装windows系统来更新BIOS模式到UEFI。</p><h4 id="2-查看电脑的硬盘数和类型"><a href="#2-查看电脑的硬盘数和类型" class="headerlink" title="2. 查看电脑的硬盘数和类型"></a>2. 查看电脑的硬盘数和类型</h4><p><strong>此电脑</strong>点击右键，点击<strong>管理</strong>，点击<strong>磁盘管理</strong>：</p><p><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202210051318262.png"></p><p>要确定是安装在SSD还是机械硬盘上，还剩下多少空间。</p><h3 id="第三步：硬盘分区"><a href="#第三步：硬盘分区" class="headerlink" title="第三步：硬盘分区"></a>第三步：硬盘分区</h3><p>在想要分区的硬盘上压缩卷，最好超过50GB，我装在了机械硬盘上，选择了200GB，即204800MB<br><strong>！！注意不要新建卷，保持空白分区就好，即显示是黑条</strong></p><p><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202210051318532.png"></p><h3 id="第四步：用rufus写入ubuntu镜像"><a href="#第四步：用rufus写入ubuntu镜像" class="headerlink" title="第四步：用rufus写入ubuntu镜像"></a>第四步：用rufus写入ubuntu镜像</h3><ul><li><p>【设备】选择u盘（u盘会被格式化，最好用4G以上或者8G）</p></li><li><p>【引导类型选择】选择下载好的ubuntu*.iso</p></li><li><p>【分区类型】一般MBR，适合BIOS和UEFI安装</p></li><li><p>【卷标】是格式化之后的u盘名称</p></li><li><p>【文件系统】选择默认的FAT32，此文件格式适合4G以下的文件，且最大只支持4G</p></li><li><p>【簇大小】选择默认，表示最小单位文件大小</p><p>选择开始，之后耐心等待6-10分钟，直到显示<strong>绿色的准备就绪</strong>，点击关闭<br>期间可能需要联网，自动下载syslinux，选择<strong>是</strong>，并选择以iso镜像模式写入，选择<strong>是</strong></p></li></ul><p><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202210051318060.jpg"></p><h3 id="第五步：安装"><a href="#第五步：安装" class="headerlink" title="第五步：安装"></a>第五步：安装</h3><h4 id="1-关机后开机，选择以U盘启动（U盘需一直插着）"><a href="#1-关机后开机，选择以U盘启动（U盘需一直插着）" class="headerlink" title="1. 关机后开机，选择以U盘启动（U盘需一直插着）"></a>1. 关机后开机，选择以U盘启动（U盘需一直插着）</h4><h4 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h4><p>快捷键启动，以华硕系列为例，开机快速按ESC，即可进入快捷界面，选择刚制作的启动盘启动(UEFI)<br>  <img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202210051318188.jpg"></p><h4 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h4><p>进入BIOS，以华硕系列为例，开机快速按F2，把右侧u盘移到至首位（下图为移动）<br>  <img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202210051318837.jpg"></p><p><strong>！！ 注意两种方法都要禁用FAST boot，即disabled，f7配置，f10保存退出</strong><br>  <img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202210051318725.jpg"></p><h4 id="错误分析"><a href="#错误分析" class="headerlink" title="错误分析"></a>错误分析</h4><p>出现以下界面的原因：<strong>使用ubuntu20.04镜像</strong></p><p>解决方案：<strong>选择使用ubuntu18.04镜像</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">GNU Grub Version <span class="token number">2.04</span>Minimal <span class="token environment constant">BASH</span>-like line editing is supported. For the first word, TAB lists possible <span class="token builtin class-name">command</span> completions. Anywhere <span class="token keyword">else</span> TAB lists possible device or <span class="token function">file</span> completions.grub<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-禁用显卡（如果有显卡的话，我是GTX1050显卡）"><a href="#2-禁用显卡（如果有显卡的话，我是GTX1050显卡）" class="headerlink" title="2. 禁用显卡（如果有显卡的话，我是GTX1050显卡）"></a>2. 禁用显卡（如果有显卡的话，我是GTX1050显卡）</h4><ul><li>选择第二个<strong>install ubuntu</strong>，按e进入<br><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202210051319606.jpg"></li><li>在 <strong>quiet</strong> 前面加入 <strong>nomodeset</strong>，按 <strong>f10</strong> ，开始安装<br><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202210051319845.jpg"></li></ul><h4 id="3-安装"><a href="#3-安装" class="headerlink" title="3. 安装"></a>3. 安装</h4><p>   仅给出几张关键的图</p><ul><li>默认字体（可以选择简体中文）<br><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202210051320473.jpg"></li><li>安装选项（选择最下面的）<br><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202210051320133.jpg"></li><li>安装位置（默认第一个）<br><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202210051320444.jpg"></li></ul><h4 id="4-进入高级模式安装显卡"><a href="#4-进入高级模式安装显卡" class="headerlink" title="4. 进入高级模式安装显卡"></a>4. 进入高级模式安装显卡</h4><ul><li><p>安装结束后重启，进入高级选项<br><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202210051320799.jpg"></p></li><li><p>进入<strong>recovery mode</strong><br><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202210051320181.jpg"></p></li><li><p>选择<strong>resume</strong>，第一个<br><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202210051320652.jpg"></p></li><li><p>换源<br>找到softwore&amp;updates ，Downloads from选择other，找到china下的清华源,close</p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> update<span class="token function">sudo</span> ubuntu-drivers autoinstall<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202210051320260.jpg"></p><p><strong>注意可能会内核更新，要等内核更新完毕才能安装显卡，否则会出现dpkg锁住</strong> </p>]]></content>
      
      
      <categories>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu双系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-Matery主题使用和美化</title>
      <link href="/2022/09/25/hexo-matery-zhu-ti-shi-yong-he-mei-hua/"/>
      <url>/2022/09/25/hexo-matery-zhu-ti-shi-yong-he-mei-hua/</url>
      
        <content type="html"><![CDATA[<p>参考链接</p><p><a href="https://hexo.io/zh-cn/index.html">Hexo 官网</a></p><p><a href="https://blog.csdn.net/tianjuewudi/article/details/112504019">个人建立 Hexo 博客 Matery 主题的过程心得|微笑小星</a></p><p><a href="https://blog.csdn.net/kuashijidexibao">Hexo-Matery 主题细致美化</a></p><p><a href="https://blog.17lai.site/">大佬一号</a>    <a href="https://fulequn.github.io/">大佬二号</a></p><h2 id="Hexo-Matery主题美化"><a href="#Hexo-Matery主题美化" class="headerlink" title="Hexo-Matery主题美化"></a>Hexo-Matery主题美化</h2><p>主题安装是简单的，但美化过程极其痛苦，主要问题出在<code>代码高亮</code>，为此查阅了很多资料，在大佬们的帮助下完成了网页的搭建，下面我将简单的说一下美化流程和错误分析。</p><h3 id="1-下载安装Matery主题"><a href="#1-下载安装Matery主题" class="headerlink" title="1. 下载安装Matery主题"></a>1. 下载安装Matery主题</h3><p>Matery主题是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题，首先在<a href="https://hexo.io/themes/">hexo官网主题</a>里面搜索 <strong>Matery</strong> 主题，点击进入作者闪烁飞狐的 <a href="https://github.com/blinkfox/hexo-theme-matery">github</a>，在搜索结果的下面一点。</p><p><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202209252027854.png"></p><ul><li><p>可以下载 <code>master</code> 分支的最新稳定版的代码，解压缩后将 <code>hexo-theme-matery</code> 复制到Hexo 的 <code>themes</code> 文件夹中</p></li><li><p>也可以选择在<code>themes</code> 文件夹下使用<code>git clone</code>命令来下载：</p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-切换主题"><a href="#2-切换主题" class="headerlink" title="2. 切换主题"></a>2. 切换主题</h3><p>下载完后，将Hexo根目录下<code>_config.yml</code> 的 <code>theme</code> 的值修改为你下载主题的文件名。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Extensions</span><span class="token comment">## Plugins: https://hexo.io/plugins/</span><span class="token comment">## Themes: https://hexo.io/themes/</span><span class="token key atrule">theme</span><span class="token punctuation">:</span> hexo<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>matery<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p> 关于根目录下<code>_config.yml</code> 文件的其它修改建议：</p><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="3-新建主题必备的页面"><a href="#3-新建主题必备的页面" class="headerlink" title="3. 新建主题必备的页面"></a>3. 新建主题必备的页面</h3><h4 id="3-1-标签-tags-页"><a href="#3-1-标签-tags-页" class="headerlink" title="3.1 标签 tags 页"></a>3.1 标签 tags 页</h4><p><code>tags</code> 页是用来展示所有标签的页面，如果 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么就需要新建一个。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2022-09-24 15:35:29</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-2-分类-categories-页"><a href="#3-2-分类-categories-页" class="headerlink" title="3.2 分类 categories 页"></a>3.2 分类 categories 页</h4><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> categories<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2022-09-24 15:36:04</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-3-新建关于我-about-页"><a href="#3-3-新建关于我-about-页" class="headerlink" title="3.3 新建关于我 about 页"></a>3.3 新建关于我 about 页</h4><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"about"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> about<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2022-09-24 15:36:26</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-4-新建留言板-contact-页（可选的）"><a href="#3-4-新建留言板-contact-页（可选的）" class="headerlink" title="3.4 新建留言板 contact 页（可选的）"></a>3.4 新建留言板 contact 页（可选的）</h4><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"contact"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> contact<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2022-09-24 16:29:57</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h4 id="3-5-新建友情链接-friends-页（可选的）"><a href="#3-5-新建友情链接-friends-页（可选的）" class="headerlink" title="3.5 新建友情链接 friends 页（可选的）"></a>3.5 新建友情链接 friends 页（可选的）</h4><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> friends<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2022-09-24 15:38:23</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token key atrule">"avatar"</span><span class="token punctuation">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token key atrule">"introduction"</span><span class="token punctuation">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token key atrule">"url"</span><span class="token punctuation">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token key atrule">"title"</span><span class="token punctuation">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token key atrule">"avatar"</span><span class="token punctuation">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token key atrule">"introduction"</span><span class="token punctuation">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token key atrule">"url"</span><span class="token punctuation">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token key atrule">"title"</span><span class="token punctuation">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token key atrule">"avatar"</span><span class="token punctuation">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token key atrule">"introduction"</span><span class="token punctuation">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token key atrule">"url"</span><span class="token punctuation">:</span> <span class="token string">"https://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token key atrule">"title"</span><span class="token punctuation">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-6-新建-404-页（与官网不同）"><a href="#3-6-新建-404-页（与官网不同）" class="headerlink" title="3.6 新建 404 页（与官网不同）"></a>3.6 新建 404 页（与官网不同）</h4><p>首先再站点根目录下的 source 文件夹下新建 404.md 文件，文件内容如下所示：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token number">404</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">"Oops～，我崩溃了！找不到你想要的页面 :("</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>紧接着在<code>hexo-theme-matery</code>主题文件夹的 layout 目录下新建 404.ejs 文件，添加内容如下：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">    <span class="token comment">/* don't remove. */</span>    <span class="token selector">.about-cover</span> <span class="token punctuation">{</span>        <span class="token property">height</span><span class="token punctuation">:</span> 90.2vh<span class="token punctuation">;</span>    <span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bg-cover pd-header about-cover<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col s10 offset-s1 m8 offset-m2 l8 offset-l2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>brand<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title center-align<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                        404                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description center-align<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                        &lt;%= page.description %&gt;                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title center-align<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>返回首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 每天切换 banner 图.  Switch banner image every day.</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>Tips: 不要在本地试验，本地的时候输入错误的页面不会显示404页面的。</p></blockquote><p><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202209252056600.png"></p><h3 id="4-添加各种插件"><a href="#4-添加各种插件" class="headerlink" title="4. 添加各种插件"></a>4. 添加各种插件</h3><h4 id="4-1-文章搜索功能（建议安装）"><a href="#4-1-文章搜索功能（建议安装）" class="headerlink" title="4.1 文章搜索功能（建议安装）"></a>4.1 文章搜索功能（建议安装）</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202209252110708.png"></p><h4 id="4-2-中文链接转拼音（建议安装）"><a href="#4-2-中文链接转拼音（建议安装）" class="headerlink" title="4.2 中文链接转拼音（建议安装）"></a>4.2 中文链接转拼音（建议安装）</h4><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment"># default: '-'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><p>第二种方法：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-abbrlink <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，修改 <code>permalink:</code> ，并在文件末尾新增 <code>abbrlink:</code>配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">permalink</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>year/<span class="token punctuation">:</span>month<span class="token punctuation">:</span>day<span class="token punctuation">:</span>abbrlink.html<span class="token key atrule">abbrlink</span><span class="token punctuation">:</span>  <span class="token key atrule">alg</span><span class="token punctuation">:</span> crc16 <span class="token comment">#算法选项：crc16丨crc32</span>  <span class="token key atrule">rep</span><span class="token punctuation">:</span> dec <span class="token comment">#输出进制：dec为十进制，hex为十六进制</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-3-文章字数统计插件（建议安装）"><a href="#4-3-文章字数统计插件（建议安装）" class="headerlink" title="4.3 文章字数统计插件（建议安装）"></a>4.3 文章字数统计插件（建议安装）</h4><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">--save</span> hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">wordCount:  enable: <span class="token boolean">false</span> <span class="token comment"># 将这个值设置为 true 即可.</span>  postWordCount: <span class="token boolean">true</span>  min2read: <span class="token boolean">true</span>  totalCount: <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202209252110245.png"></p><h4 id="4-4-添加emoji表情支持（可选）"><a href="#4-4-添加emoji表情支持（可选）" class="headerlink" title="4.4 添加emoji表情支持（可选）"></a>4.4 添加emoji表情支持（可选）</h4><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在网站<a href="https://www.webfx.com/tools/emoji-cheat-sheet/%E5%8F%AF%E4%BB%A5%E6%90%9C%E7%B4%A2%E5%B8%B8%E7%94%A8%E8%A1%A8%E6%83%85%E5%AF%B9%E5%BA%94%E4%BB%A3%E7%A0%81%EF%BC%8C%E4%BE%8B%E5%A6%82%F0%9F%98%8D">https://www.webfx.com/tools/emoji-cheat-sheet/可以搜索常用表情对应代码，例如😍</a> </p><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="5-修改社交链接"><a href="#5-修改社交链接" class="headerlink" title="5. 修改社交链接"></a>5. 修改社交链接</h3><p>在<code>hexo-theme-matery</code>主题文件夹的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">&lt;% if (theme.socialLink.github) { %&gt;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&lt;%= theme.socialLink.github %&gt;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fab fa-github<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>&lt;% } %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><h3 id="6-修改打赏的二维码图片"><a href="#6-修改打赏的二维码图片" class="headerlink" title="6. 修改打赏的二维码图片"></a>6. 修改打赏的二维码图片</h3><p>在<code>hexo-theme-matery</code>主题文件夹的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片，如果图片后缀不一样的话，需要到主题的<code>_config.yml</code>下面修改。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">reward</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> 你的赏识是我前进的动力  <span class="token key atrule">wechat</span><span class="token punctuation">:</span> /medias/reward/wechat.jpg  <span class="token key atrule">alipay</span><span class="token punctuation">:</span> /medias/reward/alipay.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-配置音乐播放器（可选的）"><a href="#7-配置音乐播放器（可选的）" class="headerlink" title="7. 配置音乐播放器（可选的）"></a>7. 配置音乐播放器（可选的）</h3><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活music配置即可：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 是否在首页显示音乐</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span>         <span class="token comment"># 非吸底模式有效</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">server</span><span class="token punctuation">:</span> netease   <span class="token comment"># require music platform: netease, tencent, kugou, xiami, baidu</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> playlist    <span class="token comment"># require song, playlist, album, search, artist</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">503838841</span>     <span class="token comment"># require song id / playlist id / album id / search keyword</span>  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>      <span class="token comment"># 开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>   <span class="token comment"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span>       <span class="token comment"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'random'</span>   <span class="token comment"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span>   <span class="token comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7</span>       <span class="token comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 列表默认折叠</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p><p><code>baidu</code>（百度音乐）。</p><p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p><p>id获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，<code>playlist</code>的id</p><p>即为这串数字。</p></blockquote><h3 id="8-看板娘模块的安装和使用（可选）"><a href="#8-看板娘模块的安装和使用（可选）" class="headerlink" title="8. 看板娘模块的安装和使用（可选）"></a>8. 看板娘模块的安装和使用（可选）</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> <span class="token parameter variable">--save</span> hexo-helper-live2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载完成后，可以在node_modules文件夹中找到自己安装的插件。</p><p>然后下载你想要的看板娘模块（可以自己到网上找哪个合心意的），执行命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> <span class="token punctuation">{</span>packagename<span class="token punctuation">}</span><span class="token comment"># 例如cnpm install live2d-widget-model-haru</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>下载完成后，回到blog根目录下配置_config.yml，添加以下代码（model要根据自己情况设置）：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">live2d</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">scriptFrom</span><span class="token punctuation">:</span> local  <span class="token key atrule">pluginRootPath</span><span class="token punctuation">:</span> live2dw/  <span class="token key atrule">pluginJsPath</span><span class="token punctuation">:</span> lib/  <span class="token key atrule">pluginModelPath</span><span class="token punctuation">:</span> assets/  <span class="token key atrule">tagMode</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">debug</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">model</span><span class="token punctuation">:</span>    <span class="token key atrule">use</span><span class="token punctuation">:</span> live2d<span class="token punctuation">-</span>widget<span class="token punctuation">-</span>model<span class="token punctuation">-</span>z16  <span class="token key atrule">display</span><span class="token punctuation">:</span>    <span class="token key atrule">position</span><span class="token punctuation">:</span> right    <span class="token key atrule">width</span><span class="token punctuation">:</span> <span class="token number">200</span>    <span class="token key atrule">height</span><span class="token punctuation">:</span> <span class="token number">400</span>  <span class="token key atrule">mobile</span><span class="token punctuation">:</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样在右下角有看板娘啦！</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">ls</span> <span class="token parameter variable">--depth</span> <span class="token number">0</span> <span class="token comment">#命令查看 npm 安装各 hexo 插件的情况</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/Hexo-Matery%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8%E5%92%8C%E7%BE%8E%E5%8C%96%5C5.png"></p><h3 id="9-新建文章模板修改"><a href="#9-新建文章模板修改" class="headerlink" title="9. 新建文章模板修改"></a>9. 新建文章模板修改</h3><p>为了新建文章方便，我们可以修改一下文章模板，建议将<code>/scaffolds/post.md</code>修改为如下代码：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> title <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> date <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token key atrule">author</span><span class="token punctuation">:</span> <span class="token key atrule">img</span><span class="token punctuation">:</span> <span class="token key atrule">coverImg</span><span class="token punctuation">:</span> <span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">password</span><span class="token punctuation">:</span><span class="token key atrule">summary</span><span class="token punctuation">:</span><span class="token key atrule">tags</span><span class="token punctuation">:</span><span class="token key atrule">categories</span><span class="token punctuation">:</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样新建文章后 一些<code>Front-matter</code>参数不用你自己补充了，修改对应信息就可以了。</p><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th align="left">配置选项</th><th align="left">默认值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">title</td><td align="left">Markdown 的文件标题</td><td align="left">文章标题，强烈建议填写此选项</td></tr><tr><td align="left">date</td><td align="left">文件创建时的日期时间</td><td align="left">发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td align="left">author</td><td align="left">根 _config.yml 中的 author</td><td align="left">文章作者</td></tr><tr><td align="left">img</td><td align="left">featureImages 中的某个值</td><td align="left">文章特征图，推荐使用图床</td></tr><tr><td align="left">top</td><td align="left">true</td><td align="left">推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章</td></tr><tr><td align="left">cover</td><td align="left">false</td><td align="left">v1.0.2 版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td align="left">coverImg</td><td align="left">无</td><td align="left">v1.0.2 版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td align="left">password</td><td align="left">无</td><td align="left">文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword 选项</td></tr><tr><td align="left">toc</td><td align="left">true</td><td align="left">是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项</td></tr><tr><td align="left">mathjax</td><td align="left">false</td><td align="left">是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行</td></tr><tr><td align="left">summary</td><td align="left">无</td><td align="left">文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td align="left">categories</td><td align="left">无</td><td align="left">文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td align="left">tags</td><td align="left">无</td><td align="left">文章标签，一篇文章可以多个标签</td></tr><tr><td align="left">reprintPolicy</td><td align="left">cc_by</td><td align="left">文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p>注意:</p><ol><li><strong>如果 img 属性不填写的话，文章特色图会根据文章标题的 hashcode 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图各有特色。</strong></li><li>date 的值尽量保证每篇文章是唯一的，因为本主题中 Gitalk 和 Gitment 识别 id 是通过 date 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 _config.yml 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：开源中国在线工具、chahuo、站长工具。</li><li>您可以在文章 md 文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><h3 id="10-修改网站相关信息"><a href="#10-修改网站相关信息" class="headerlink" title="10. 修改网站相关信息"></a>10. 修改网站相关信息</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#这是根目录下的配置文件信息</span><span class="token comment"># Site</span><span class="token key atrule">title</span><span class="token punctuation">:</span>     <span class="token comment">#网站标题</span><span class="token key atrule">subtitle</span><span class="token punctuation">:</span>  <span class="token comment">#网站副标题</span><span class="token key atrule">description</span><span class="token punctuation">:</span>     <span class="token comment">#网站描述description 主要用于5E0，告诉搜索引擎一个关于您站点的简单描述</span><span class="token key atrule">keywords</span><span class="token punctuation">:</span>  <span class="token comment">#网站的关键词。使用半角逗号“，”分隔多个关键词</span><span class="token key atrule">author</span><span class="token punctuation">:</span>    <span class="token comment">#您的名字</span><span class="token key atrule">language</span><span class="token punctuation">:</span>  <span class="token comment">#网站使用的语言。建议修改为zh-CN</span><span class="token key atrule">timezone</span><span class="token punctuation">:</span>  <span class="token comment">#网站时区。Hexo默认使用您电脑的时区。</span><span class="token comment"># 这是主题配置文件的相关信息</span><span class="token comment"># 配置网站favicon和网站LOGO</span><span class="token comment"># 此处我用的CDN，也可以使用本地文件</span><span class="token key atrule">favicon</span><span class="token punctuation">:</span> <span class="token key atrule">logo</span><span class="token punctuation">:</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="11-代码高亮！！"><a href="#11-代码高亮！！" class="headerlink" title="11. 代码高亮！！"></a>11. 代码高亮！！</h3><p>从 Hexo5.0 版本开始自带了 <code>prismjs</code> 代码语法高亮的支持，本主题对此进行了改造支持。</p><h4 id="11-1-卸载hexo-prism-plugin插件"><a href="#11-1-卸载hexo-prism-plugin插件" class="headerlink" title="11.1 卸载hexo-prism-plugin插件"></a>11.1 卸载hexo-prism-plugin插件</h4><p>如果你的博客中曾经安装过 <code>hexo-prism-plugin</code> 的插件，那么你须要执行 <code>npm uninstall hexo-prism-plugin</code> 来卸载掉它，否则生成的代码中会有 <code>{</code> 和 <code>}</code> 的转义字符。<strong>一定要卸载！！</strong></p><h4 id="11-2-禁用highlight，启用prismjs"><a href="#11-2-禁用highlight，启用prismjs" class="headerlink" title="11.2 禁用highlight，启用prismjs"></a>11.2 禁用highlight，启用prismjs</h4><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>                      <span class="token comment"># 代码块的设置</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>                 <span class="token comment"># 开启代码块高亮</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>             <span class="token comment"># 显示行数</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>            <span class="token comment"># 如果未指定语言，则启用自动检测</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span>               <span class="token comment"># 用 n 个空格替换 tabs；如果值为空，则不会替换 tabs</span>  <span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prismjs</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://hexo.io/zh-cn/docs/syntax-highlight#preprocess">注意事项</a></p><h4 id="11-3-自定义prismjs样式"><a href="#11-3-自定义prismjs样式" class="headerlink" title="11.3 自定义prismjs样式"></a>11.3 自定义prismjs样式</h4><p>主题中默认的 <code>prismjs</code> 主题是 <code>Tomorrow Night</code>，如果你想定制自己的主题，可以前往 <a href="https://prismjs.com/download.html#themes=prism-tomorrow&amp;languages=markup+css+clike+javascript+abap+abnf+actionscript+ada+agda+al+antlr4+apacheconf+apex+apl+applescript+aql+arduino+arff+armasm+arturo+asciidoc+aspnet+asm6502+asmatmel+autohotkey+autoit+avisynth+avro-idl+awk+bash+basic+batch+bbcode+bicep+birb+bison+bnf+brainfuck+brightscript+bro+bsl+c+csharp+cpp+cfscript+chaiscript+cil+clojure+cmake+cobol+coffeescript+concurnas+csp+cooklang+coq+crystal+css-extras+csv+cue+cypher+d+dart+dataweave+dax+dhall+diff+django+dns-zone-file+docker+dot+ebnf+editorconfig+eiffel+ejs+elixir+elm+etlua+erb+erlang+excel-formula+fsharp+factor+false+firestore-security-rules+flow+fortran+ftl+gml+gap+gcode+gdscript+gedcom+gettext+gherkin+git+glsl+gn+linker-script+go+go-module+gradle+graphql+groovy+haml+handlebars+haskell+haxe+hcl+hlsl+hoon+http+hpkp+hsts+ichigojam+icon+icu-message-format+idris+ignore+inform7+ini+io+j+java+javadoc+javadoclike+javastacktrace+jexl+jolie+jq+jsdoc+js-extras+json+json5+jsonp+jsstacktrace+js-templates+julia+keepalived+keyman+kotlin+kumir+kusto+latex+latte+less+lilypond+liquid+lisp+livescript+llvm+log+lolcode+lua+magma+makefile+markdown+markup-templating+mata+matlab+maxscript+mel+mermaid+mizar+mongodb+monkey+moonscript+n1ql+n4js+nand2tetris-hdl+naniscript+nasm+neon+nevod+nginx+nim+nix+nsis+objectivec+ocaml+odin+opencl+openqasm+oz+parigp+parser+pascal+pascaligo+psl+pcaxis+peoplecode+perl+php+phpdoc+php-extras+plant-uml+plsql+powerquery+powershell+processing+prolog+promql+properties+protobuf+pug+puppet+pure+purebasic+purescript+python+qsharp+q+qml+qore+r+racket+cshtml+jsx+tsx+reason+regex+rego+renpy+rescript+rest+rip+roboconf+robotframework+ruby+rust+sas+sass+scss+scala+scheme+shell-session+smali+smalltalk+smarty+sml+solidity+solution-file+soy+sparql+splunk-spl+sqf+sql+squirrel+stan+stata+iecst+stylus+supercollider+swift+systemd+t4-templating+t4-cs+t4-vb+tap+tcl+tt2+textile+toml+tremor+turtle+twig+typescript+typoscript+unrealscript+uorazor+uri+v+vala+vbnet+velocity+verilog+vhdl+vim+visual-basic+warpscript+wasm+web-idl+wgsl+wiki+wolfram+wren+xeora+xml-doc+xojo+xquery+yaml+yang+zig&amp;plugins=line-highlight+line-numbers+inline-color+command-line+diff-highlight+treeview">prismjs 下载页面</a> 定制下载自己喜欢的主题 <code>js</code>和<code>css</code> 文件，替换掉 <code>hexo-theme-matery</code> 主题文件夹中的 <code>source/libs/prism/prism.css</code> 文件即可。也可以直接从我的github的<code>libs/prism</code>里面下载，自带的和定制下载的都有点小问题。</p><p>然后修改<code>hexo-theme-matery</code> 主题文件夹中的 <code>_config.yml</code>。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">libs</span><span class="token punctuation">:</span>  <span class="token key atrule">css</span><span class="token punctuation">:</span>    <span class="token punctuation">...</span>    <span class="token key atrule">prism</span><span class="token punctuation">:</span> /libs/prism/prism.css    <span class="token punctuation">...</span>  <span class="token key atrule">js</span><span class="token punctuation">:</span>    <span class="token punctuation">...</span>    <span class="token key atrule">prism</span><span class="token punctuation">:</span> /libs/prism/prism.js    <span class="token punctuation">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="11-4-出现的问题"><a href="#11-4-出现的问题" class="headerlink" title="11.4 出现的问题"></a>11.4 出现的问题</h4><p>当面运行测试的时候会发现，代码前面没有行数，但有空格，这真的是折磨。</p><p><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202209252148051.png"></p><p>这需要在<code>hexo-theme-matery</code>主题文件的 <code>source/css/matery.css</code> 文件中修改</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector"># 修改前pre</span> <span class="token punctuation">{</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 2rem 1rem 1rem 3rem <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 0.35rem<span class="token punctuation">;</span>    <span class="token property">tab-size</span><span class="token punctuation">:</span> 4<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"># 修改后pre</span> <span class="token punctuation">{</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 2rem 1rem 1rem 1rem <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 0.35rem<span class="token punctuation">;</span>    <span class="token property">tab-size</span><span class="token punctuation">:</span> 4<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202209252149218.png"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上就是Matery主题的安装和美化过程，当然还有很多功能等着大家探索，可以根据自己的喜好，安装各种插件。</p><p>谢谢大家!</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo高级使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo入门</title>
      <link href="/2022/09/25/hexo-ru-men/"/>
      <url>/2022/09/25/hexo-ru-men/</url>
      
        <content type="html"><![CDATA[<blockquote><p>参考链接</p><p><a href="https://blog.17lai.site/">夜法之书的Hexo</a>  </p><p><a href="https://fulequn.github.io/2020/08/23/Article202008231/">Hexo一篇文章多个categories</a></p></blockquote><h2 id="hexo-目录结构说明"><a href="#hexo-目录结构说明" class="headerlink" title="hexo 目录结构说明"></a>hexo 目录结构说明</h2><p>在执行过<code>Hexo d</code>命令之后，目录结构新增了<code>.deploy_git</code>，<code>public</code>，<code>.gitignore</code>，如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"> $ tree <span class="token parameter variable">-L</span> <span class="token number">2</span><span class="token builtin class-name">.</span>├── .deploy_git├── node_modules├── public├── scaffolds│   ├── draft.md│   ├── page.md│   └── post.md├── <span class="token builtin class-name">source</span>│   ├── _posts│   ├── _drafts├── themes├── _config.yml├── db.json├── package.json└── package-lock.json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-config-yml"><a href="#1-config-yml" class="headerlink" title="1. _config.yml"></a>1. _config.yml</h3><p>用来配置博客相关的参数，初始化时自动创建。具体参数设置，可参照 <a href="https://hexo.io/zh-cn/docs/configuration">Hexo 配置</a> 文档。</p><h3 id="2-node-modules-和-package-json"><a href="#2-node-modules-和-package-json" class="headerlink" title="2. node_modules 和 package.json"></a>2. node_modules 和 package.json</h3><p>都是在初始化时自动创建。</p><ul><li><code>node_modules</code>用来存储已安装的各类依赖包。</li><li><code>package.json</code>用来查看 Hexo 的版本以及相关依赖包的版本。</li></ul><h3 id="3-scaffold"><a href="#3-scaffold" class="headerlink" title="3. scaffold"></a>3. scaffold</h3><p>模板文件夹，初始化时自动创建。包含<code>page</code>，<code>post</code>，<code>draft</code>三种模板，分别对应 页面、要发布的文章、草稿。</p><h3 id="4-themes"><a href="#4-themes" class="headerlink" title="4. themes"></a>4. themes</h3><p>主题文件夹，初始化时自动创建。每一个主题，都有一个单独的文件夹。默认主题为 <a href="https://github.com/hexojs/hexo-theme-landscape">landscape</a>。</p><h3 id="5-source-，-public-和-deploy-git"><a href="#5-source-，-public-和-deploy-git" class="headerlink" title="5. source ， public 和 .deploy_git"></a>5. source ， public 和 .deploy_git</h3><ul><li>source：资源文件夹。用来存放图片、Markdown 文档（文章、草稿）、各种页面（分类、关于页面等）。</li><li>public：将 source 文件夹里的 Markdown 文档，转换成 index.html。再结合主题进行渲染，就是我们最终看到的博客。</li><li>.deploy_git：将 public 文件夹的内容提交到 Github 后生成，内容与 public 文件夹基本一致。</li></ul><p>这三者的关系大致是：source -&gt; public -&gt; .deploy_git</p><ul><li>执行<code>hexo generate</code>，根据 source，更新 public。</li><li>执行<code>hexo deploy</code>，根据 public，更新 .deploy_git。</li></ul><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="1-指令说明"><a href="#1-指令说明" class="headerlink" title="1. 指令说明"></a>1. 指令说明</h3><ul><li><code>hexo server</code> #启动本地服务器，用于预览主题。Hexo 会监视文件变动并自动更新，除修改站点配置文件外,无须重启服务器,直接刷新网页即可生效。</li><li><code>hexo server -s</code> #以静态模式启动</li><li><code>hexo server -p 5000</code> #更改访问端口 (默认端口为 4000，’ctrl + c’关闭 server)</li><li><code>hexo server -i IP地址</code> #自定义 IP</li><li><code>hexo clean</code> #清除缓存 ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的 public 文件夹</li><li><code>hexo g</code> #生成静态网页 (执行 $ <code>hexo g</code>后会在站点根目录下生成 public 文件夹, hexo 会将”/blog/source/“ 下面的.md后缀的文件编译为.html 后缀的文件,存放在”/blog/public/ “ 路径下)</li><li><code>hexo d</code> #自动生成网站静态文件，并将本地数据部署到设定的仓库(如 github)</li><li><code>hexo init</code> 文件夹名称 #初始化 XX 文件夹名称</li><li><code>npm update hexo -g</code>#升级</li><li><code>npm install hexo -g</code> #安装</li><li><code>node -v</code> #查看 node.js 版本号</li><li><code>npm -v</code> #查看 npm 版本号</li><li><code>git --version</code> #查看 git 版本号</li><li><code>hexo -v</code> #查看 hexo 版本号</li><li>hexo new page “music” #新增页面music</li><li>hexo new post “文章名称” #新增文章</li></ul><h3 id="2-简写指令"><a href="#2-简写指令" class="headerlink" title="2. 简写指令"></a>2. 简写指令</h3><ul><li><code>hexo n "我的第一篇文章"</code> 等价于 <code>hexo new "我的第一篇文章"</code> 还等价于 <code>hexo new post "我的第一篇文章"</code></li><li><code>hexo p</code> 等价于 <code>hexo publish</code></li><li><code>hexo g</code> 等价于 <code>hexo generate</code></li><li><code>hexo s</code>等价于 <code>hexo server</code></li><li><code>hexo d</code> 等价于 <code>hexo deploy</code></li><li><code>hexo g -d</code>等价于<code>hexo generate --deploy</code></li></ul><p>注: <code>hexo clean</code> 没有 简写, <code>git --version</code> 没有简写</p><h2 id="tags与categories"><a href="#tags与categories" class="headerlink" title="tags与categories"></a>tags与categories</h2><p>在 Hexo 中使用 <code>tags</code> 与 <code>categories</code> 往往需要使用多标签和多分类,这里记录一下它们的用法。</p><h3 id="1-tags"><a href="#1-tags" class="headerlink" title="1. tags"></a>1. tags</h3><p>多标签写法，这2种都是一样的效果，用哪个都可以，建议使用列表式，直观清晰。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">tags:  - 123  - 456或者tags: [123, 456]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-categories"><a href="#2-categories" class="headerlink" title="2. categories"></a>2. categories</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text"># 这是默认的写法，给文章添加一个分类。categories: 123# 这会将文章分类123/456子分类目录下。categories:  - 123  - 456或者categories: [123, 456]   # 文章被分类到123以及123的自分类456这2个分类下面，官方指定写法。categories:  - [123]  - [123, 456]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 博客搭建和使用</title>
      <link href="/2022/09/24/hexo/"/>
      <url>/2022/09/24/hexo/</url>
      
        <content type="html"><![CDATA[<blockquote><p>参考链接</p><p><a href="https://hexo.io/zh-cn/index.html">Hexo 官网</a></p><p><a href="https://zhuanlan.zhihu.com/p/547520780">2022 Hexo 博客搭建和使用教程(Windows)</a></p><p><a href="https://www.bilibili.com/video/BV1Yb411a7ty/?share_source=copy_web&amp;vd_source=d698f3adeb829e7ec38eaffd67915950">手把手教你从0开始搭建自己的个人博客|bilibili</a></p></blockquote><p>Hexo 介绍:</p><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="https://link.zhihu.com/?target=http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><h2 id="第一章-前期准备"><a href="#第一章-前期准备" class="headerlink" title="第一章 前期准备"></a>第一章 前期准备</h2><h3 id="1-1-安装前所需环境介绍"><a href="#1-1-安装前所需环境介绍" class="headerlink" title="1.1 安装前所需环境介绍"></a>1.1 安装前所需环境介绍</h3><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p><ul><li><a href="http://nodejs.org/">Node.js</a> </li><li><a href="http://git-scm.com/">Git</a></li></ul><p>如果电脑已经具备所需工具，那么可以直接进入第二章开始安装 Hexo 了。</p><p>如果还未安装这两款工具，那么请按照以下步骤进行安装。</p><h3 id="1-2-安装-Git"><a href="#1-2-安装-Git" class="headerlink" title="1.2 安装 Git"></a>1.2 安装 Git</h3><p>git 是一个开源的分布式版本控制系统，用他的服务器来做主页地址的。</p><ul><li><p>官方下载地址: <a href="http://git-scm.com/">Git - Downloading Package</a></p></li><li><p>安装与Github配置使用: <a href="https://github.com/jijunhao/git-skills">Git操作手册</a></p></li></ul><p><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202209251035608.png"></p><ul><li><p>注意事项: 建议选择 64-bit Git for Windows Setup，并且安装时要勾选 <strong>Add to PATH</strong> 选项</p></li><li><p>安装后验证: 在 cmd 中输入命令 <code>git --version</code>, 查看 Git 版本</p></li></ul><h3 id="1-3-安装-Node-js"><a href="#1-3-安装-Node-js" class="headerlink" title="1.3 安装 Node.js"></a>1.3 安装 Node.js</h3><p> node.js 是一种 javascript 的运行环境，能够使得 javascript 能够脱离浏览器运行，用来跑 npm。</p><ul><li>官方下载地址: <a href="http://nodejs.org/">Node.js</a> </li><li>安装与使用: <a href="https://www.runoob.com/nodejs/nodejs-tutorial.html">菜鸟教程</a></li></ul><p><img src="https://blog-1314109265.cos.ap-nanjing.myqcloud.com/202209251035160.png"></p><ul><li><p>注意事项: 使用 Node.js 官方安装程序时，请确保勾选 <strong>Add to PATH</strong> 选项（默认已勾选）</p></li><li><p>安装后验证: 在 cmd 中输入命令 <code>node -v</code>, 查看 Node 版本</p></li></ul><h2 id="第二章-安装-Hexo"><a href="#第二章-安装-Hexo" class="headerlink" title="第二章 安装 Hexo"></a>第二章 安装 Hexo</h2><h3 id="2-1-安装-cnpm"><a href="#2-1-安装-cnpm" class="headerlink" title="2.1 安装 cnpm"></a>2.1 安装 cnpm</h3><p>直接用 npm 速度会比较慢（源在国外），因此要利用 npm 安装 cnpm。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#安装淘宝的cnpm管理器</span><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> cnpm <span class="token parameter variable">--registry</span><span class="token operator">=</span>http://registry.npm.taobao.org <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>参数说明: </p><p><code>-g</code> 表示进行全局安装，</p><p><code>--registry=https://registry.npm.taobao.org</code> 表示使用淘宝镜像安装 cnpm</p><h3 id="2-2-安装-Hexo"><a href="#2-2-安装-Hexo" class="headerlink" title="2.2 安装 Hexo"></a>2.2 安装 Hexo</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-3-注意事项"><a href="#2-3-注意事项" class="headerlink" title="2.3 注意事项"></a>2.3 注意事项</h3><p>建议永远安装最新版本的 Hexo，以及 <a href="https://hexo.io/zh-cn/docs/index.html#%E5%AE%89%E8%A3%85%E5%89%8D%E6%8F%90">推荐的 Node.js 版本</a>。</p><table><thead><tr><th>Hexo 版本</th><th>最低兼容 Node.js 版本</th></tr></thead><tbody><tr><td>6.0+</td><td>12.13.0</td></tr><tr><td>5.0+</td><td>10.13.0</td></tr><tr><td>4.1 - 4.2</td><td>8.10</td></tr><tr><td>4.0</td><td>8.6</td></tr><tr><td>3.3 - 3.9</td><td>6.9</td></tr><tr><td>3.2 - 3.3</td><td>0.12</td></tr><tr><td>3.0 - 3.1</td><td>0.10 or iojs</td></tr><tr><td>0.0.1 - 2.8</td><td>0.10</td></tr></tbody></table><h3 id="2-4-Hexo常用命令"><a href="#2-4-Hexo常用命令" class="headerlink" title="2.4 Hexo常用命令"></a>2.4 Hexo常用命令</h3><p><code>hexo clean</code> 清除缓存文件和已生成的静态文件 public</p><p><code>hexo n [name]</code>生成文章，即在source文件夹下的_posts文件夹下创建.md文件</p><p><code>hexo g</code> 会在 public 文件夹下生成相关的 html 文件，这些文章将会提交到 Github 上</p><p><code>hexo s</code> 可以开启本地预览服务，打开浏览器访问 <a href="https://link.zhihu.com/?target=http://localhost:4000/">http://localhost:4000</a> 即可看到博客内容</p><p><code>hexo d</code> 将生成的一系列文章推送到 Github</p><h2 id="第三章-配置-Github"><a href="#第三章-配置-Github" class="headerlink" title="第三章 配置 Github"></a>第三章 配置 Github</h2><h3 id="3-1-在-Github-上创建仓库"><a href="#3-1-在-Github-上创建仓库" class="headerlink" title="3.1 在 Github 上创建仓库"></a><strong>3.1 在 Github 上创建仓库</strong></h3><p>创建一个名为<code>用户名.github.io</code>的仓库，这样就有个人主页了，地址为<code>https://用户名.github.io</code></p><h3 id="3-2-配置-SSH-免密登录"><a href="#3-2-配置-SSH-免密登录" class="headerlink" title="3.2 配置 SSH 免密登录"></a><strong>3.2 配置 SSH 免密登录</strong></h3><ol><li>[配置ssh密钥](<a href="https://github.com/jijunhao/git-skills/blob/main/%E9%99%84%E5%BD%95B-SSH%E5%AF%86%E5%8C%99.md">git-skills/附录B-SSH密匙.md at main · jijunhao/git-skills · GitHub</a>)</li><li>[配置git](<a href="https://github.com/jijunhao/git-skills/blob/main/02%E9%85%8D%E7%BD%AEGit.md">git-skills/02配置Git.md at main · jijunhao/git-skills · GitHub</a>)</li></ol><h2 id="第四章-使用-Hexo-搭建博客"><a href="#第四章-使用-Hexo-搭建博客" class="headerlink" title="第四章 使用 Hexo 搭建博客"></a>第四章 使用 Hexo 搭建博客</h2><h3 id="4-1-初始化"><a href="#4-1-初始化" class="headerlink" title="4.1 初始化"></a>4.1 初始化</h3><p>创建一个空文件夹(名字可以随便取)，这将会是静态网页的本地存储位置。</p><p>打开文件夹，在此文件夹下运行git bash（右键单击空白处）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init<span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="4-2-将博客部署到-Github"><a href="#4-2-将博客部署到-Github" class="headerlink" title="4.2 将博客部署到 Github"></a>4.2 将博客部署到 Github</h3><p>打开文件夹下的_config.yml文件，这个文件是用来配置你的博客的。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repository</span><span class="token punctuation">:</span> git@github.com<span class="token punctuation">:</span>用户名/用户名.github.io git  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后安装git部署插件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后输入命令进行推送：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>推送成功后，即可通过<code>https://用户名.github.io/</code>访问个人博客了!</p><h2 id="第五章-使用-Typora-编写博客"><a href="#第五章-使用-Typora-编写博客" class="headerlink" title="第五章 使用 Typora 编写博客"></a>第五章 使用 Typora 编写博客</h2><p>Typora 是一款轻便简洁的 Markdown 编辑器，支持即时渲染技术，这也是与其他 Markdown 编辑器最显著的区别。即时渲染使得你写Markdown 就像是写 Word 文档一样流畅自如，不像其他编辑器的有编辑栏和显示栏。</p><p>优点:</p><ul><li><strong>简洁美观</strong></li><li><strong>实时预览</strong></li><li><strong>扩展语法</strong></li><li><strong>跨平台</strong></li></ul><p>官网: <a href="https://typoraio.cn/">Typora 官方中文站</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上就是Hexo搭建一个简单的博客的过程。</p><p>欢迎大家访问我的博客地址: <a href="https://jijunhao.github.io/">https://jijunhao.github.io/</a></p><p>谢谢大家!</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/09/24/hello-world/"/>
      <url>/2022/09/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
